<UserControl x:Class="CatGame.Views.MiniGame1View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CatGame.Views"
             xmlns:helpers="clr-namespace:CatGame.Helpers"
             xmlns:viewModels="clr-namespace:CatGame.ViewModels"
             xmlns:views="clr-namespace:CatGame.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920"
             Background="#FFFFBFD2"
             FocusManager.FocusedElement="{Binding ElementName=GameCanvas}">
    <Grid>
        <Grid x:Name="GameContent">
            <Grid.Effect>
                <BlurEffect>
                    <BlurEffect.Radius>
                        <MultiBinding Converter="{StaticResource MultipleBooleansToBlurConverter}">
                            <Binding Path="IsPaused"/>
                            <Binding Path="IsGameOver"/>
                        </MultiBinding>
                    </BlurEffect.Radius>
                </BlurEffect>
            </Grid.Effect>
            <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Верхняя панель -->
        <!-- Верхняя панель -->
        <Grid Grid.Row="0" Background="#AAFFFFFF">
            <Grid Margin="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <!-- Для монетки и баланса -->
                    <ColumnDefinition Width="*"/>
                    <!-- Пустое пространство -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Для сердечек и паузы -->
                </Grid.ColumnDefinitions>

                <!-- Левая часть: монетка и баланс -->
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <Image Source="/CatGame;component/Views/монета.png" 
                   Width="60" 
                   Height="60"/>
                    <TextBlock Text="{Binding GameData.CurrentGameBalance}" 
                       FontSize="28"
                       Margin="10,0"
                       Foreground="Black"
                       VerticalAlignment="Center"/>
                </StackPanel>

                <!-- Правая часть: сердечки и пауза -->
                <StackPanel Orientation="Horizontal" 
                    Grid.Column="2"
                    HorizontalAlignment="Right">
                    <!-- Сердечки -->
                    <StackPanel Orientation="Horizontal" Margin="0 0 20 0">
                        <Image Source="/CatGame;component/Views/сердце.png" 
                       Width="50" 
                       Height="50"
                       Opacity="{Binding HeartVisibilities[0], Converter={StaticResource VisibilityToOpacityConverter}}"/>
                        <Image Source="/CatGame;component/Views/сердце.png" 
                       Width="50" 
                       Height="50"
                       Opacity="{Binding HeartVisibilities[1], Converter={StaticResource VisibilityToOpacityConverter}}"/>
                        <Image Source="/CatGame;component/Views/сердце.png" 
                       Width="50" 
                       Height="50"
                       Opacity="{Binding HeartVisibilities[2], Converter={StaticResource VisibilityToOpacityConverter}}"/>
                    </StackPanel>

                    <!-- Кнопка паузы -->
                    <Button Command="{Binding PauseCommand}" 
                    Style="{StaticResource InvisibleButtonStyle}">
                        <Image Source="/CatGame;component/Views/кнопкапауза.png" 
                       Width="60" 
                       Height="60"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

        <!-- Игровое поле -->
            <Canvas x:Name="GameCanvas" Grid.Row="1" Focusable="True" 
        FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}"
        KeyDown="Canvas_KeyDown"
        KeyUp="Canvas_KeyUp"
        Loaded="GameCanvas_Loaded"
        PreviewMouseDown="GameCanvas_PreviewMouseDown">
                <!-- Кот -->
            <Image Source="{Binding GameData.SelectedSkin.ImagePath, TargetNullValue=/CatGame;component/Views/котправо.png}" 
       Width="{x:Static viewModels:MiniGame1ViewModel.CatWidth}"
       Height="{x:Static viewModels:MiniGame1ViewModel.CatHeight}"
       Canvas.Left="{Binding CatPosition.X}"
       Canvas.Top="{Binding CatPosition.Y}"
       RenderTransformOrigin="0.5, 0.5">
                <!-- ... остальная разметка изображения ... -->

                <Image.Effect>
                    <DropShadowEffect BlurRadius="10" 
                          Opacity="0.5" 
                          Direction="270" 
                          ShadowDepth="5"/>
                </Image.Effect>
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="Scale" ScaleX="1"/>
                        <SkewTransform x:Name="Skew" AngleX="0"/>
                    </TransformGroup>
                </Image.RenderTransform>
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFacingRight}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация "псевдо-поворота" -->
                                            <DoubleAnimation
                                    Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                                    To="-1"
                                    Duration="0:0:0.3"
                                    EasingFunction="{StaticResource ElasticEase}"/>

                                            <!-- Анимация перспективы -->
                                            <DoubleAnimation
                                    Storyboard.TargetProperty="RenderTransform.Children[1].AngleX"
                                    From="0" To="20" 
                                    AutoReverse="True"
                                    Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                    Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                                    To="1"
                                    Duration="0:0:0.3"
                                    EasingFunction="{StaticResource ElasticEase}"/>

                                            <DoubleAnimation
                                    Storyboard.TargetProperty="RenderTransform.Children[1].AngleX"
                                    From="0" To="-20"
                                    AutoReverse="True"
                                    Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <!-- Еда -->
            <ItemsControl ItemsSource="{Binding Foods}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Image Width="100" 
                   Height="100"
                   Source="{Binding ImagePath}"
                   RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Image.RenderTransform>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Stretch" Value="Uniform"/>
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!-- Анимация вращения -->
                                                    <DoubleAnimation
                                            Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                            From="0" To="360" 
                                            Duration="0:0:2"
                                            RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Плохая еда -->
            <ItemsControl ItemsSource="{Binding BadFoods}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Image Width="100" 
               Height="100"
               Source="{Binding ImagePath}"
               RenderTransformOrigin="0.5,0.5"
               Stretch="Uniform">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!-- Анимация вращения -->
                                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Image.RenderTransform).Children[0].(RotateTransform.Angle)"
                                        From="-15" To="15" 
                                        Duration="0:0:0.3"
                                        AutoReverse="True"
                                        RepeatBehavior="Forever"/>

                                                    <!-- Анимация дрожания -->
                                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Image.RenderTransform).Children[1].(TranslateTransform.X)"
                                        From="-3" To="3" 
                                        Duration="0:0:0.1"
                                        AutoReverse="True"
                                        RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            
        </Canvas>
</Grid>
        <!-- Меню паузы -->
        <!-- Меню паузы -->
       
        <Grid Grid.RowSpan="2" Panel.ZIndex="2"
      Visibility="{Binding IsPausedAndNotGameOver, Converter={StaticResource BoolToVisibility}}">
            <ContentControl Content="{Binding PauseViewModel}"/>
        </Grid>

        <!-- Меню проигрыша -->
        <Grid Grid.RowSpan="2" Panel.ZIndex="2"
              Visibility="{Binding IsGameOver, Converter={StaticResource BoolToVisibility}}">
            <ContentControl Content="{Binding GameOverViewModel}"/>
        </Grid>
    </Grid>
</UserControl>